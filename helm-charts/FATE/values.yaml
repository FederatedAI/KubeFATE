
image:
  registry: federatedai
  isThridParty:
  tag: 1.4.5-release
  pullPolicy: IfNotPresent
  
partyId: 9999
partyName: fate-9999

istio:
  enabled: false

host:
  fateboard: 9999.fateboard.kubefate.net
  client: 9999.notebook.kubefate.net

exchange:
  partyIp: 192.168.1.1
  partyPort: 30000

partyList:
- partyId: 8888
  partyIp: 192.168.8.1
  partyPort: 30008
- partyId: 10000
  partyIp: 192.168.10.1
  partyPort: 30010

persistence:
  enabled: false

modules:
  rollsite: 
    include: true
    ip: rollsite
    type: NodePort
    nodePort: 30009
    nodeSelector: {}
  python: 
    include: true
    fateboardIp: fateboard
    fateboardType: ClusterIP
    fateflowIp: fateflow
    fateflowType: ClusterIP
    nodeSelector: {}
  clustermanager: 
    include: true
    ip: clustermanager
    type: ClusterIP
    nodeSelector: {}
  nodemanager:  
    include: true
    list:
    - name: nodemanager-0
      nodeSelector: {}
      sessionProcessorsPerNode: 2
      subPath: "nodemanager-0"
      existingClaim: ""
      storageClass: "nodemanager-0"
      accessMode: ReadWriteOnce
      size: 1Gi
    - name: nodemanager-1
      nodeSelector: {}
      sessionProcessorsPerNode: 2
      subPath: "nodemanager-1"
      existingClaim: ""
      storageClass: "nodemanager-1"
      accessMode: ReadWriteOnce
      size: 1Gi
  client: 
    include: true
    ip: client
    type: ClusterIP
    nodeSelector: {}
  mysql: 
    include: true
    type: ClusterIP
    nodeSelector: {}
    ip: mysql
    port: 3306
    database: eggroll_meta
    user: fate
    password: fate_dev
    subPath: "mysql"
    existingClaim: ""
    claimName: mysql-data
    storageClass: "mysql"
    accessMode: ReadWriteOnce
    size: 1Gi
  serving:
    ip: 192.168.9.1
    port: 30209
  Spark:
    include: true
    Path: "/opt/spark"
    Master:
      Name: master
      Image: "k8s.gcr.io/spark"
      ImageTag: "1.5.1_v3"
      Replicas: 1
      Component: "spark-master"
      Cpu: "100m"
      Memory: "512Mi"
      ServicePort: 7077
      ContainerPort: 7077
      # Set Master JVM memory. Default 1g
      # DaemonMemory: 1g
      ServiceType: ClusterIP
    WebUi:
      Name: webui
      ServicePort: 8080
      ContainerPort: 8080
      Component: "spark-webui"
      Ingress:
        Enabled: true
        Path: "/"
        Hosts:
        - 9999.sparkui.kubefate.net
        Tls: []
      #    - Hosts:
      #    SecretName: zeppelin
      # Used to create an Ingress record.
      # Hosts:
      # - example.local
      # Annotations:
      #   kubernetes.io/ingress.class: nginx
      #   kubernetes.io/tls-acme: "true"
      # Tls:
      #   Enabled: true
      # Secrets must be manually created in the namespace.
      #   SecretName: example-tls
      #   Hosts:
      #   - example.local
    Worker:
      Name: worker
      Image: "k8s.gcr.io/spark"
      ImageTag: "1.5.1_v3"
      Replicas: 3
      Component: "spark-worker"
      Cpu: "100m"
      Memory: "512Mi"
      ContainerPort: 8081
      # Set Worker JVM memory. Default 1g
      # DaemonMemory: 1g
      # Set how much total memory workers have to give executors
      # ExecutorMemory: 1g
      Autoscaling:
        Enabled: false
      ReplicasMax: 10
      CpuTargetPercentage: 50

