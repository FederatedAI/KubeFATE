
image:
  registry: {{ .registry | default "federatedai" }}
  isThridParty: {{ empty .registry | ternary  "false" "true" }}
  tag: {{ .imageTag | default "1.8.0-release" }}
  pullPolicy: {{ .pullPolicy | default "IfNotPresent" }}
  {{- with .imagePullSecrets }}
  imagePullSecrets:
{{ toYaml . | indent 2 }}
  {{- end }}

partyId: {{ .partyId | int64 | toString }}
partyName: {{ .name }}

{{- $partyId := (.partyId | int64 | toString) }}

{{- with .ingress }}
ingress:
  {{- with .fateboard }}
  fateboard:
    {{- with .annotations }}
    annotations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .hosts }}
    hosts:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tls }}
    tls: 
{{ toYaml . | indent 6 }}
    {{- end }}
  {{- end }}
  
  {{- with .client }}
  client:
    {{- with .annotations }}
    annotations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .hosts }}
    hosts:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tls }}
    tls: 
{{ toYaml . | indent 6 }}
    {{- end }}
  {{- end }}
  
  {{- with .spark }}
  spark:
    {{- with .annotations }}
    annotations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .hosts }}
    hosts:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tls }}
    tls: 
{{ toYaml . | indent 6 }}
    {{- end }}
  {{- end }}
  
  {{- with .rabbitmq }}
  rabbitmq:
    {{- with .annotations }}
    annotations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .hosts }}
    hosts:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tls }}
    tls: 
{{ toYaml . | indent 6 }}
    {{- end }}
  {{- end }}
  
  {{- with .pulsar }}
  pulsar:
    {{- with .annotations }}
    annotations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .hosts }}
    hosts:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tls }}
    tls: 
{{ toYaml . | indent 6 }}
    {{- end }}
  {{- end }}
  
{{- end }}

{{- with .istio }}
istio:
  enabled: {{ .enabled | default false }}
{{- end }}

{{- with .podSecurityPolicy }}
podSecurityPolicy:
  enabled: {{ .enabled | default false }}
{{- end }}

ingressClassName: {{ .ingressClassName | default "nginx"}}

exchange:
{{- with .rollsite }}
{{- with .exchange }}
  partyIp: {{ .ip }}
  partyPort: {{ .port }}
{{- end }}
{{- end }}

exchangeList:
{{- with .lbrollsite }}
{{- range .exchangeList }}
  - id: {{ .id }}
    ip: {{ .ip }}
    port: {{ .port }}
{{- end }}
{{- end }}

partyList:
{{- with .rollsite }}
{{- range .partyList }}
  - partyId: {{ .partyId }}
    partyIp: {{ .partyIp }}
    partyPort: {{ .partyPort }}
{{- end }}
{{- end }}

persistence:
  enabled: {{ .persistence | default "false" }}

modules:
  rollsite: 
    include: {{ has "rollsite" .modules }}
    {{- with .rollsite }}
    ip: rollsite
    type: {{ .type | default "ClusterIP" }}
    nodePort: {{ .nodePort }}
    loadBalancerIP: {{ .loadBalancerIP }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .polling }}
    polling:
      enabled: {{ .enabled }}
      type: {{ .type }}
      {{- with .server }}
      server:
        ip: {{ .ip }}
        port: {{ .port }}
      {{- end }}
      {{- with .clientList }}
      clientList:
{{ toYaml . | indent 6 }}
      {{- end }}
      concurrency: {{ .concurrency }}
    {{- end }}
    {{- end }}


  lbrollsite:
    include: {{ has "lbrollsite" .modules }}
    {{- with .lbrollsite }}
    ip: rollsite
    type: {{ .type | default "ClusterIP" }}
    loadBalancerIP: {{ .loadBalancerIP }}
    nodePort: {{ .nodePort }}
    size: {{ .size | default "2M" }}
    {{- with .nodeSelector }}
    nodeSelector:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- end }}


  python: 
    include: {{ has "python" .modules }}
    backend: {{ default "eggroll" .backend }}
    {{- with .python }}
    {{- with .resources }}
    resources:
{{ toYaml . | indent 6 }}
    {{- end }}
    logLevel: {{ .logLevel }}
    type: {{ .type | default "ClusterIP" }}
    httpNodePort: {{ .httpNodePort }}
    grpcNodePort: {{ .grpcNodePort }}
    loadBalancerIP: {{ .loadBalancerIP }}
    serviceAccountName: {{ .serviceAccountName }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    enabledNN: {{ .enabledNN | default false }}
    existingClaim: {{ .existingClaim  }}
    claimName: {{ .claimName | default "python-data" }}
    storageClass: {{ .storageClass | default "python" }}
    accessMode: {{ .accessMode | default "ReadWriteOnce" }}
    size: {{ .size | default "1Gi" }}
    {{- with .clustermanager }}
    clustermanager:
      cores_per_node: {{ .cores_per_node }}
      nodes: {{ .nodes }}
    {{- end }}
    {{- with .spark }}

    spark: 
{{ toYaml . | indent 6}}
    {{- end }}
    {{- with .hdfs }}
    hdfs:
      name_node: {{ .name_node }}
      path_prefix: {{ .path_prefix }}
    {{- end }}
    {{- with .pulsar }}
    pulsar:
      host: {{ .host }}
      mng_port: {{ .mng_port }}
      port: {{ .port }}
    {{- end }}
    {{- with .rabbitmq }}
    rabbitmq:
      host: {{ .host }}
      mng_port: {{ .mng_port }}
      port: {{ .port }}
      user: {{ .user }}
      password: {{ .password }}
    {{- end }}
    {{- with .nginx }}
    nginx:
      host: {{ .host }}
      http_port: {{ .http_port }}
      grpc_port: {{ .grpc_port }}
    {{- end }}
    {{- end }}


  clustermanager: 
    include: {{ has "clustermanager" .modules }}
    {{- with .clustermanager }}
    ip: clustermanager
    type: "ClusterIP"
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- end }}


  nodemanager:  
    include: {{ has "nodemanager" .modules }}
    {{- with .nodemanager }}
    list:
    {{- $nodemanager := . }}
    {{- range .count | int | until }}
    - name: nodemanager-{{ . }}
      {{- with $nodemanager.nodeSelector }}
      nodeSelector: 
{{ toYaml . | indent 8 }}
      {{- end}}
      {{- with $nodemanager.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end}}
      {{- with $nodemanager.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end}}
      sessionProcessorsPerNode: {{ $nodemanager.sessionProcessorsPerNode }}
      subPath: "nodemanager-{{ . }}"
      existingClaim: ""
      storageClass: "{{ $nodemanager.storageClass }}"
      accessMode: {{ $nodemanager.accessMode }}
      size: {{ $nodemanager.size }}
    {{- end }}
    {{- end }}


  client: 
    include: {{ has "client" .modules }}
    {{- with .client }}
    subPath: {{ .subPath }}
    existingClaim: {{ .existingClaim }}
    storageClass: {{ .storageClass  | default "client" }}
    accessMode: {{ .accessMode  | default "ReadWriteOnce" }}
    size: {{ .size  | default "1Gi" }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- end }}


  mysql: 
    include: {{ has "mysql" .modules }}
    {{- with .mysql }}
    type: {{ .type  | default "ClusterIP" }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    ip: {{ .ip | default "mysql" }}
    port: {{ .port | default "3306" }}
    database: {{ .database | default "eggroll_meta" }}
    user: {{ .user | default "fate" }}
    password: {{ .password | default "fate_dev" }}
    subPath: {{ .subPath }}
    existingClaim: {{ .existingClaim }}
    storageClass: {{ .storageClass }}
    accessMode: {{ .accessMode | default "ReadWriteOnce" }}
    size: {{ .size | default "1Gi" }}
    {{- end }}


  serving:
    ip: {{ .servingIp }}
    port: {{ .servingPort }}
    {{- with .serving }}
    useRegistry: {{ .useRegistry | default false }}
    zookeeper:
{{ toYaml .zookeeper | indent 6 }}
    {{- end}}

  fateboard:
    include: {{ has "fateboard" .modules }}
    {{- with .fateboard }}
    type: {{ .type }}
    username: {{ .username }}
    password: {{ .password }}
    {{- end}}

  spark:
    include: {{ has "spark" .modules }}
    {{- with .spark }}
    {{- if .master }}
    master:
      Image: "{{ .master.Image }}"
      ImageTag: "{{ .master.ImageTag }}"
      replicas: {{ .master.replicas }}
      {{- with .master.resources }}
      resources:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .master.nodeSelector }}
      nodeSelector: 
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .master.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .master.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      type: {{ .master.type }}
    {{- end }}
    {{- if .worker }}
    worker:
      Image: "{{ .worker.Image }}"
      ImageTag: "{{ .worker.ImageTag }}"
      replicas: {{ .worker.replicas }}
      {{- with .worker.resources }}
      resources:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .worker.nodeSelector }}
      nodeSelector: 
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .worker.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .worker.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      type: {{ .worker.type | default "ClusterIP" }}
    {{- end }}
    {{- end }}


  hdfs:
    include: {{ has "hdfs" .modules }}
    {{- with .hdfs }}
    namenode:
      {{- with .namenode.nodeSelector }}
      nodeSelector: 
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .namenode.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .namenode.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      type: {{ .namenode.type | default "ClusterIP" }}
      nodePort: {{ .namenode.nodePort }}
      existingClaim: {{ .namenode.existingClaim }}
      storageClass: {{ .namenode.storageClass | default "" }}
      accessMode: {{ .namenode.accessMode  | default "ReadWriteOnce"  }}
      size: {{ .namenode.size }}
    datanode:
      {{- with .datanode.nodeSelector }}
      nodeSelector: 
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .datanode.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .datanode.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      type: {{ .datanode.type | default "ClusterIP" }}
      existingClaim: {{ .datanode.existingClaim }}
      storageClass: {{ .datanode.storageClass | default "" }}
      accessMode: {{ .datanode.accessMode  | default "ReadWriteOnce"  }}
      size: {{ .datanode.size }}
    {{- end }}


  nginx:
    include: {{ has "nginx" .modules }}
    {{- with .nginx }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    type: {{ .type | default "ClusterIP" }}
    httpNodePort:  {{ .httpNodePort }}
    grpcNodePort:  {{ .grpcNodePort }}
    loadBalancerIP: {{ .loadBalancerIP }}
    {{- with .exchange }}
    exchange:
      ip: {{ .ip }}
      httpPort: {{ .httpPort }}
      grpcPort: {{ .grpcPort }}
    {{- end }}
    route_table: 
      {{- range $key, $val := .route_table }}
      {{ $key }}: 
{{ toYaml $val | indent 8 }}
      {{- end }}
    {{- end }}


  rabbitmq:
    include: {{ has "rabbitmq" .modules }}
    {{- with .rabbitmq }}
    {{- with .nodeSelector }}
    nodeSelector:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    type: {{ .type | default "ClusterIP" }}
    nodePort: {{ .nodePort }}
    default_user: {{ .default_user }}
    default_pass: {{ .default_pass }}
    loadBalancerIP: {{ .loadBalancerIP }}
    user: {{ .user }}
    password: {{ .password }}
    route_table:
      {{- range $key, $val := .route_table }}
      {{ $key }}: 
{{ toYaml $val | indent 8 }}
      {{- end }}
    {{- end }}


  pulsar:
    include: {{ has "pulsar" .modules }}
    {{- with .pulsar }}
    {{- with .nodeSelector }}
    nodeSelector:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .tolerations }}
    tolerations:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .affinity }}
    affinity:
{{ toYaml . | indent 6 }}
    {{- end }}
    type: {{ .type | default "ClusterIP" }}
    httpNodePort: {{ .httpNodePort }}
    httpsNodePort: {{ .httpsNodePort }}
    loadBalancerIP: {{ .loadBalancerIP }}
    {{- with .publicLB}}
    publicLB:
      enabled: {{ .enabled | default false }}
    {{- end }}
    {{- with .exchange }}
    exchange:
      ip: {{ .ip }}
      port: {{ .port }}
      domain: {{ .domain | default "fate.org" }}
    {{- end }}
    route_table: 
      {{- range $key, $val := .route_table }}
      {{ $key }}: 
{{ toYaml $val | indent 8 }}
      {{- end }}
    existingClaim: {{ .existingClaim }}
    storageClass: {{ .storageClass | default "" }}
    accessMode: {{ .accessMode  | default "ReadWriteOnce"  }}
    size: {{ .size }}
    {{- end }}
    
externalMysqlIp: {{ .externalMysqlIp }}
externalMysqlPort: {{ .externalMysqlPort }}
externalMysqlDatabase: {{ .externalMysqlDatabase }}
externalMysqlUser: {{ .externalMysqlUser }}
externalMysqlPassword: {{ .externalMysqlPassword }}