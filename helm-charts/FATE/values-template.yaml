
image:
  registry: {{ .registry | default "federatedai" }}
  isThridParty: {{ empty .registry | ternary  "false" "true" }}
  tag: 1.5.0-release
  pullPolicy: {{ .pullPolicy | default "IfNotPresent" }}

partyId: {{ .partyId }}
partyName: {{ .name }}

host:
  fateboard: {{ .partyId }}.fateboard.kubefate.net
  client: {{ .partyId }}.notebook.kubefate.net
  sparkUI: {{ .partyId }}.spark.kubefate.net
  rabbitmqUI: {{ .partyId }}.rabbitmq.kubefate.net

{{- with .istio }}
istio:
  enabled: {{ .enabled | default false }}
{{- end }}

exchange:
{{- with .rollsite }}
{{- with .exchange }}
  partyIp: {{ .ip }}
  partyPort: {{ .port }}
{{- end }}
{{- end }}

partyList:
{{- with .rollsite }}
{{- range .partyList }}
  - partyId: {{ .partyId }}
    partyIp: {{ .partyIp }}
    partyPort: {{ .partyPort }}
{{- end }}
{{- end }}

persistence:
  enabled: {{ .persistence | default "false" }}

modules:
  rollsite: 
    include: {{ has "rollsite" .modules }}
    {{- with .rollsite }}
    ip: rollsite
    type: {{ .type | default "ClusterIP" }}
    nodePort: {{ .nodePort }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- end }}


  python: 
    include: {{ has "python" .modules }}
    backend: {{ default "eggroll" .backend }}
    {{- with .python }}
    type: {{ .type }}
    httpNodePort: {{ .httpNodePort }}
    grpcNodePort: {{ .grpcNodePort }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .spark }}
    spark: 
      master: {{ .master }}
      home: {{ .home }}
      cores_per_node: {{ .cores_per_node }}
      nodes: {{ .nodes }}
    {{- end }}
    {{- with .hdfs }}
    hdfs:
      name_node: {{ .name_node }}
      path_prefix: {{ .path_prefix }}
    {{- end }}
    {{- with .rabbitmq }}
    rabbitmq:
      host: {{ .host }}
      mng_port: {{ .mng_port }}
      port: {{ .port }}
      user: {{ .user }}
      password: {{ .password }}
      # default conf/rabbitmq_route_table.yaml
      route_table: {{ .route_table }}
    {{- end }}
    {{- with .nginx }}
    nginx:
      host: {{ .host }}
      port: {{ .port }}
    {{- end }}
    {{- end }}


  clustermanager: 
    include: {{ has "clustermanager" .modules }}
    {{- with .clustermanager }}
    ip: clustermanager
    type: ClusterIP
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- end }}


  nodemanager:  
    include: {{ has "nodemanager" .modules }}
    {{- with .nodemanager }}
    list:
    {{- $nodemanager := . }}
    {{- range .count | int | until }}
    - name: nodemanager-{{ . }}
      nodeSelector: {}
      sessionProcessorsPerNode: {{ $nodemanager.sessionProcessorsPerNode }}
      subPath: "nodemanager-{{ . }}"
      existingClaim: ""
      storageClass: "{{ $nodemanager.storageClass }}"
      accessMode: {{ $nodemanager.accessMode }}
      size: {{ $nodemanager.size }}
    {{- end }}

    {{- range  $nodemanager.list }}
    - name: {{ .name }}
      {{- with .nodeSelector }}
      nodeSelector: 
{{ toYaml . | indent 8 }}
      {{- end }}
      sessionProcessorsPerNode: {{ .sessionProcessorsPerNode }}
      subPath: {{ .subPath }}
      existingClaim: {{ .existingClaim }}
      storageClass: {{ .storageClass }}
      accessMode: {{ .accessMode }}
      size: {{ .size }}
    {{- end }}
    {{- end }}


  client: 
    include: {{ has "client" .modules }}
    {{- with .client }}
    ip: {{ .ip }}
    type: {{ .type }}
    nodeSelector: 
{{ toYaml .nodeSelector | indent 6 }}
    {{- end }}


  mysql: 
    include: {{ has "mysql" .modules }}
    {{- with .mysql }}
    type: {{ .type }}
    nodeSelector: 
{{ toYaml .mysql.nodeSelector | indent 6 }}
    ip: {{ .mysql.ip | default "mysql" }}
    port: {{ .mysql.port | default "3306" }}
    database: {{ .mysql.database | default "eggroll_meta" }}
    user: {{ .mysql.user | default "fate" }}
    password: {{ .mysql.password | default "fate_dev" }}
    subPath: {{ .mysql.subPath }}
    existingClaim: {{ .mysql.existingClaim }}
    storageClass: {{ .mysql.storageClass }}
    accessMode: {{ .mysql.accessMode | default "ReadWriteOnce" }}
    size: {{ .mysql.size | default "1Gi" }}
    {{- end }}


  serving:
    ip: {{ .servingIp }}
    port: {{ .servingPort }}


  fateboard:
    include: {{ has "fateboard" .modules }}
    {{- with .spark }}
    type: {{ .type }}
    {{- end }}


  spark:
    include: {{ has "spark" .modules }}
    {{- with .spark }}
    master:
      Image: "{{ .master.Image }}"
      ImageTag: "{{ .master.ImageTag }}"
      replicas: {{ .master.replicas }}
      cpu: "{{ .master.cpu }}"
      memory: "{{ .master.memory }}"
      nodeSelector: 
{{ toYaml .master.nodeSelector | indent 8 }}
      type: {{ .type }}
    worker:
      Image: "{{ .worker.Image }}"
      ImageTag: "{{ .worker.ImageTag }}"
      replicas: {{ .worker.replicas }}
      cpu: "{{ .worker.cpu }}"
      memory: "{{ .worker.memory }}"
      nodeSelector: 
{{ toYaml .worker.nodeSelector | indent 8 }}
      type: {{ .type }}
    {{- end }}


  hdfs:
    include: {{ has "hdfs" .modules }}
    {{- with .hdfs }}
    namenode:
      nodeSelector: 
{{ toYaml .namenode.nodeSelector | indent 8 }}
      type: ClusterIP
    datanode:
      nodeSelector: 
{{ toYaml .datanode.nodeSelector | indent 8 }}
      type: ClusterIP
    {{- end }}


  nginx:
    include: {{ has "nginx" .modules }}
    {{- with .nginx }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    type: {{ .type }}
    nodePort: {{ .nodePort }}
    route_table: 
      {{- range $key, $val := .route_table }}
      {{ $key }}: 
{{ toYaml $val | indent 8 }}
      {{- end }}
    {{- end }}


  rabbitmq:
    include: {{ has "rabbitmq" .modules }}
    {{- with .rabbitmq }}
    {{- with .nodeSelector }}
    nodeSelector: 
{{ toYaml . | indent 6 }}
    {{- end }}
    type: {{ .type }}
    nodePort: {{ .nodePort }}
    default_user: {{ .default_user }}
    default_pass: {{ .default_pass }}
    user: {{ .user }}
    password: {{ .password }}
    route_table:
      {{- range $key, $val := .route_table }}
      {{ $key }}: 
{{ toYaml $val | indent 8 }}
      {{- end }}
    {{- end }}
