
image:
  registry: {{ .registry | default "federatedai" }}
  isThridParty: {{ empty .registry | ternary  "false" "true" }}
  tag: 1.4.5-release
  pullPolicy: {{ .pullPolicy | default "IfNotPresent" }}

partyId: {{ .partyId }}
partyName: {{ .name }}

host:
  fateboard: {{ .partyId }}.fateboard.kubefate.net
  client: {{ .partyId }}.notebook.kubefate.net

istio:
  enabled: {{ with .istio }}{{ .enabled | default false }}{{ end }}

exchange:
{{- with .rollsite }}
{{- with .exchange }}
  partyIp: {{ .ip }}
  partyPort: {{ .port }}
{{- end }}
{{- end }}

partyList:
{{- with .rollsite }}
{{- range .partyList }}
  - partyId: {{ .partyId }}
    partyIp: {{ .partyIp }}
    partyPort: {{ .partyPort }}
{{- end }}
{{- end }}

persistence:
  enabled: {{ .persistence | default "false" }}

modules:
  rollsite: 
    include: {{ has "rollsite" .modules }}
    ip: rollsite
    type: {{ .rollsite.type | default "ClusterIP" }}
    nodePort: {{ with .rollsite }}{{ .nodePort }}{{ end }}
    {{- with .rollsite }}
    {{- with .nodeSelector }}
    nodeSelector: 
    {{- range $k, $v := . }}
      {{ $k }}: {{ $v }}
    {{- end }}
    {{- end }}
    {{- end }}
  python: 
    include: {{ has "python" .modules }}
    fateboardIp: fateboard
    fateboardType: ClusterIP
    fateflowIp: fateflow
    {{- with .python }}
    fateflowType: {{ .fateflowType | default "ClusterIP" }}
    fateflowNodePort: {{ .fateflowNodePort }}
    {{- with .nodeSelector }}
    nodeSelector: 
    {{- range $k, $v := . }}
      {{ $k }}: {{ $v }}
    {{- end }}
    {{- end }}
    {{- end }}
  clustermanager: 
    include: {{ has "clustermanager" .modules }}
    ip: clustermanager
    type: ClusterIP
    {{- with .clustermanager }}
    {{- with .nodeSelector }}
    nodeSelector: 
    {{- range $k, $v := . }}
      {{ $k }}: {{ $v }}
    {{- end }}
    {{- end }}
    {{- end }}
  nodemanager:  
    include: {{ has "nodemanager" .modules }}
    list:
    {{- with .nodemanager }}
    {{- $nodemanager := . }}
    {{- range .count | int | until }}
    - name: nodemanager-{{ . }}
      nodeSelector: {}
      sessionProcessorsPerNode: {{ $nodemanager.sessionProcessorsPerNode }}
      subPath: "nodemanager-{{ . }}"
      existingClaim: ""
      storageClass: "{{ $nodemanager.storageClass }}"
      accessMode: {{ $nodemanager.accessMode }}
      size: {{ $nodemanager.size }}
    {{- end }}

    {{- range  $nodemanager.list }}
    - name: {{ .name }}
      {{- with .nodeSelector }}
      nodeSelector: 
      {{- range $k, $v := . }}
        {{ $k }}: {{ $v }}
      {{- end }}
      {{- end }}
      sessionProcessorsPerNode: {{ .sessionProcessorsPerNode }}
      subPath: {{ .subPath }}
      existingClaim: {{ .existingClaim }}
      storageClass: {{ .storageClass }}
      accessMode: {{ .accessMode }}
      size: {{ .size }}
    {{- end }}
    {{- end }}
  client: 
    include: {{ has "client" .modules }}
    ip: client
    type: ClusterIP
    {{- with .client }}
    {{- with .nodeSelector }}
    nodeSelector: 
    {{- range $k, $v := . }}
      {{ $k }}: {{ $v }}
    {{- end }}
    {{- end }}
    {{- end }}
  mysql: 
    {{- if .mysql }}
    include: {{ has "mysql" .modules }}
    type: ClusterIP
    {{- with .mysql }}
    {{- with .nodeSelector }}
    nodeSelector: 
    {{- range $k, $v := . }}
      {{ $k }}: {{ $v }}
    {{- end }}
    {{- end }}
    {{- end }}
    ip: {{ .mysql.ip | default "mysql" }}
    port: {{ .mysql.port | default "3306" }}
    database: {{ .mysql.database | default "eggroll_meta" }}
    user: {{ .mysql.user | default "fate" }}
    password: {{ .mysql.password | default "fate_dev" }}
    subPath: {{ .mysql.subPath }}
    existingClaim: {{ .mysql.existingClaim }}
    storageClass: {{ .mysql.storageClass }}
    accessMode: {{ .mysql.accessMode | default "ReadWriteOnce" }}
    size: {{ .mysql.size | default "1Gi" }}
    {{- else }}
    include: {{ has "mysql" .modules }}
    type: ClusterIP
    nodeSelector: {}
    ip: {{ .externalMysqlIp | default "mysql" }}
    port: {{ .externalMysqlPort | default "3306" }}
    database: {{ .externalMysqlDatabase | default "eggroll_meta" }}
    user: {{ .externalMysqlUser | default "fate" }}
    password: {{ .externalMysqlPassword | default "fate_dev" }}
    subPath: ""
    existingClaim: ""
    storageClass: "mysql"
    accessMode: ReadWriteOnce
    size: 1Gi
    {{- end }}
  serving:
    ip: {{ .servingIp }}
    port: {{ .servingPort }}
  Spark:
    include: {{ has "spark" .modules }}
    Path: "/opt/spark"
    Master:
      {{- $master := .spark.master }}
      Name: master
      Image: "{{ $master.Image }}"
      ImageTag: "{{ $master.ImageTag }}"
      Replicas: {{ $master.Replicas }}
      Component: "spark-master"
      Cpu: "{{ $master.Cpu }}"
      Memory: "{{ $master.Memory }}"
      ServicePort: 7077
      ContainerPort: 7077
      # Set Master JVM memory. Default 1g
      # DaemonMemory: 1g
      ServiceType: ClusterIP
    WebUi:
      Name: webui
      ServicePort: 8080
      ContainerPort: 8080
      Component: "spark-webui"
      Ingress:
        Enabled: true
        Path: "/"
        Hosts:
        - 9999.sparkui.kubefate.net
        Tls: []
      #    - Hosts:
      #    SecretName: zeppelin
      # Used to create an Ingress record.
      # Hosts:
      # - example.local
      # Annotations:
      #   kubernetes.io/ingress.class: nginx
      #   kubernetes.io/tls-acme: "true"
      # Tls:
      #   Enabled: true
      # Secrets must be manually created in the namespace.
      #   SecretName: example-tls
      #   Hosts:
      #   - example.local
    Worker:
      {{- $worker := .spark.worker }}
      Name: worker
      Image: "{{ $worker.Image }}"
      ImageTag: "{{ $worker.ImageTag }}"
      Replicas: {{ $worker.Replicas }}
      Component: "spark-worker"
      Cpu: "{{ $worker.Cpu }}"
      Memory: "{{ $worker.Memory }}"
      ContainerPort: 8081
      # Set Worker JVM memory. Default 1g
      # DaemonMemory: 1g
      # Set how much total memory workers have to give executors
      # ExecutorMemory: 1g
      Autoscaling:
        Enabled: {{ $worker.Autoscaling.Enabled }}
      ReplicasMax: {{ $worker.ReplicasMax }}
      CpuTargetPercentage: 50

