# Copyright 2019-2022 VMware, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{ if .Values.modules.python.include }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: python-config
  labels:
    fateMoudle: python
{{ include "fate.labels" . | indent 4 }}
data:
  spark-defaults.conf: |
    spark.master                      {{ if eq .Values.computing "Spark_local" }}local[*]{{ else }}{{ .Values.modules.python.spark.master | default "spark://spark-master:7077"}}{{ end }}
    spark.driver.host                 {{  .Values.modules.python.spark.driverHost | default "fateflow" }}
    {{- if .Values.modules.python.spark.driverStartPort }}
    spark.driver.port                 {{  .Values.modules.python.spark.driverStartPort }}
    {{- end }}
    
    {{- if .Values.modules.python.spark.portMaxRetries }}
    spark.port.maxRetries             {{  .Values.modules.python.spark.portMaxRetries }}
    {{- end }}
    
    {{- if .Values.modules.python.spark.blockManagerStartPort }}
    spark.blockManager.port           {{  .Values.modules.python.spark.blockManagerStartPort }}
    {{- end }}
    
    {{- if .Values.modules.python.spark.blockManagerStartPort }}
    spark.driver.bindAddress          0.0.0.0
    {{- end }}
    
    {{- if .Values.modules.python.spark.pysparkPython }}
    spark.pyspark.python              {{  .Values.modules.python.spark.pysparkPython }}
    spark.pyspark.driver.python       python
    {{- end }}
  service_conf.yaml: |
    party_id: {{ .Values.partyId | quote }}
    use_registry: false
    encrypt:
      key_0:
        module: fate_flow.hub.encrypt.password_encrypt#pwdecrypt
        # base on: fate_flow/conf/
        private_path: private_key.pem
    fateflow:
      host: fateflow_ip
      http_port: 9380
      grpc_port: 9360
      # proxy_name: rollsite
      {{- if eq .Values.computing "Spark" "Spark_local" }}
      proxy_name: nginx
      {{- else }}
      proxy_name: rollsite
      {{- end }}
      nginx:
        host: 
        http_port: 
        grpc_port: 
    database:
      engine: mysql
      # encrypt passwd key
      decrypt_key:
      mysql:
        name: '{{ .Values.externalMysqlDatabase | default .Values.modules.mysql.database | default "eggroll_meta" }}'
        user: '{{ .Values.externalMysqlUser | default .Values.modules.mysql.user | default "fate" }}'
        passwd: '{{ .Values.externalMysqlPassword | default .Values.modules.mysql.password | default "fate_dev" }}'
        host: '{{ .Values.externalMysqlIp | default .Values.modules.mysql.ip | default "mysql" }}'
        port: {{ .Values.externalMysqlPort | default .Values.modules.mysql.port | default "3306" }}
        max_connections: 100
        stale_timeout: 30
      sqlite:
        # default fate_flow/runtime/system_settings: SQLITE_PATH
        # /xxx/xxx.sqlite
        path:
    default_engines:
      {{- if eq .Values.computing "Spark_local" }}
      computing: "spark"
      {{- else }}
      computing: {{ .Values.computing | lower }}
      {{- end }}
      {{- if eq .Values.computing "Eggroll" }}
      federation: "rollsite"
      {{- else }}
      federation: {{ .Values.federation | lower }}
      {{- end }}
      storage: {{ .Values.storage | lower }}
    default_provider:
      name: fate
      # version default: fateflow.env
      version:
      device: local
    federation:
      pulsar:
        host: {{ .Values.modules.python.pulsar.host }}
        port: {{ .Values.modules.python.pulsar.port }}
        mng_port: {{ .Values.modules.python.pulsar.mng_port }}
        topic_ttl: {{ .Values.modules.python.pulsar.topic_ttl | default "3" }}
        cluster: {{ .Values.modules.python.pulsar.cluster | default "standalone" }}
        tenant: {{ .Values.modules.python.pulsar.tenant | default "fl-tenant" }}        
        # default conf/pulsar_route_table.yaml
        route_table: conf/pulsar_route_table/pulsar_route_table.yaml
        # mode: replication / client, default: replication
        mode: replication
        max_message_size: 1048576
      nginx:
        host: {{ .Values.modules.python.nginx.host }}
        http_port: {{ .Values.modules.python.nginx.http_port }}
        grpc_port: {{ .Values.modules.python.nginx.grpc_port }}
        # http or grpc
        protocol: http
      rabbitmq:
        host: {{ .Values.modules.python.rabbitmq.host }}
        mng_port: {{ .Values.modules.python.rabbitmq.mng_port }}
        port: {{ .Values.modules.python.rabbitmq.port }}
        user: {{ .Values.modules.python.rabbitmq.user }}
        password: {{ .Values.modules.python.rabbitmq.password }}
        # default conf/rabbitmq_route_table.yaml
        route_table: conf/rabbitmq_route_table/rabbitmq_route_table.yaml
        # mode: replication / client, default: replication
        mode: replication
        max_message_size: 1048576
      rollsite:
        host: rollsite
        port: 9370
      osx:
        host: osx
        port: 9370
    computing:
      standalone:
        cores: 32
      eggroll:
        cores: 32
        nodes: 2
      spark:
        # default use SPARK_HOME environment variable
        home: /data/projects/spark-3.1.3-bin-hadoop3.2/
        cores: 32
    storage:
      hdfs:
        name_node: {{ .Values.modules.python.hdfs.name_node | default "hdfs://namenode:9000" }}
    hook_module:
      client_authentication: fate_flow.hook.flow.client_authentication
      site_authentication: fate_flow.hook.flow.site_authentication
      permission: fate_flow.hook.flow.permission
    authentication:
      client: false
      site: false
      permission: false
    model_store:
      engine: file
      # encrypt passwd key
      decrypt_key:
      file:
        # default fate_flow/runtime/system_settings: MODEL_STORE_PATH
        path: 
      mysql:
        name: fate_flow
        user: fate
        passwd: fate
        host: 127.0.0.1
        port: 3306
        max_connections: 100
        stale_timeout: 30
      tencent_cos:
        Region:
        SecretId:
        SecretKey:
        Bucket:
    {{- with .Values.modules.serving }}
    servings:
      hosts:
      {{- if and .ip .port}}
      - '{{ .ip }}:{{ .port }}'
      {{- else }}
      - ''
      {{- end }}
    zookeeper:
      {{- if .zookeeper }}
{{ toYaml .zookeeper | indent 6 }}
      {{- else}}
      hosts:
      - serving-zookeeper.fate-serving-9999:2181
      use_acl: false
      user: fate
      password: fate
      {{- end }}
    {{- end }}

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: pulsar-route-table
  labels:
    fateMoudle: python
{{ include "fate.labels" . | indent 4 }}
data:
  pulsar_route_table.yaml: |
    {{- if .Values.modules.pulsar.route_table }}
    {{- range $key, $val := .Values.modules.pulsar.route_table }}
    {{ $key }}:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- else }}
    {{ .Values.partyId }}:
      host: pulsar
      port: 6650
      sslPort: 6651
      proxy: ""
    {{- end}}
    {{- with .Values.modules.pulsar.exchange }}
    default:
      proxy: "{{ .ip }}:{{ .port }}"
      domain: "{{ .domain }}"
    {{- else }}
    default:
      proxy: "proxy.fate.org:443"
      domain: "fate.org"
      brokerPort: 6650
      brokerSslPort: 6651
    {{- end }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: rabbitmq-route-table
  labels:
    fateMoudle: python
{{ include "fate.labels" . | indent 4 }}
data:
  rabbitmq_route_table.yaml: |
  {{- if .Values.modules.rabbitmq.route_table }}
    {{- range $key, $val := .Values.modules.rabbitmq.route_table }}
    {{ $key }}:
{{ toYaml . | indent 6 }}
    {{- end }}
  {{- else }}
    {{ .Values.partyId }}:
      host: rabbitmq
      port: 5672
  {{- end}}

{{ end }}