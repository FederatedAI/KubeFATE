# Copyright 2019-2021 VMware, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{ if .Values.modules.client.include }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  labels:
    fateMoudle: client
{{ include "fate.labels" . | indent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      fateMoudle: client
{{ include "fate.matchLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        fateMoudle: client
{{ include "fate.labels" . | indent 8 }}
    spec:
      containers:
        - image: {{ .Values.image.registry }}/client:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: client
          env:
            - name: partyId
              value: {{ .Values.partyId | quote  }}
            - name: FATE_FLOW_IP
              value: "fateflow"
            - name: FATE_FLOW_PORT
              value: "9380"
            - name: FATE_SERVING_HOST
              value: "{{.Values.modules.serving.ip}}:{{.Values.modules.serving.port}}"
          ports:
            - containerPort: 20000
          volumeMounts:
            - mountPath: /data/projects/fate/persistence/
              name: persistence
              subPath: {{ .Values.modules.client.subPath }}
      {{- with .Values.modules.client.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.modules.client.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.modules.client.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 6 }}
      {{- end }}
      serviceAccountName: {{ template "serviceAccountName" . }}
      restartPolicy: Always
      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: persistence
          emptyDir: {}
        {{- else }}
        - name: persistence
          persistentVolumeClaim:
            claimName: {{ .Values.modules.client.existingClaim | default  "client-data" }}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: notebook
  labels:
    fateMoudle: client
{{ include "fate.labels" . | indent 4 }}
spec:
  ports:
    - name: "tcp-notebook"
      port: 20000
      targetPort: 20000
      protocol: TCP
  type: {{ .Values.modules.client.type }}
  selector:
    fateMoudle: client
{{ include "fate.matchLabels" . | indent 4 }}
---
{{- if and .Values.persistence.enabled (not .Values.modules.client.existingClaim) }}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: client-data
  labels:
    fateMoudle: client
{{ include "fate.labels" . | indent 4 }}
spec:
  accessModes: 
    - {{ .Values.modules.client.accessMode }}
  resources:
    requests:
      storage: {{ .Values.modules.client.size }}
  {{- if .Values.modules.client.storageClass }}
    {{- if eq "-" .Values.modules.client.storageClass }}
  storageClassName: ""
    {{- else }}
  storageClassName: {{ .Values.modules.client.storageClass }}
    {{- end }}
  {{- end }}
{{- end }}
{{ end }}
