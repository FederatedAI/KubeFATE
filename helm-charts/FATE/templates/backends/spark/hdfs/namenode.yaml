# Copyright 2019-2022 VMware, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if .Values.modules.hdfs.include }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: namenode
  labels:
    fateMoudle: namenode
{{ include "fate.labels" . | indent 4 }}
spec:
  serviceName: namenode
  replicas: 1
  selector:
    matchLabels:
      fateMoudle: namenode
{{ include "fate.matchLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        fateMoudle: namenode
{{ include "fate.labels" . | indent 8 }}
    spec:
    {{ if .Values.persistence.enabled }}
      initContainers:
        - name: delete-lost-found
          image: busybox
          command: ["sh", "-c", "rm -rf /hadoop/dfs/name/lost+found"]
          volumeMounts:
            - name: dfs
              mountPath: /hadoop/dfs/name
    {{ end }}
      containers:
        - name: namenode
          image: {{ .Values.image.registry }}{{ .Values.modules.namenode.image }}:{{ .Values.modules.namenode.imageTag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: CLUSTER_NAME
            value: fate
          envFrom:
          - configMapRef:
              name: namenode-env 
          ports:
            - containerPort: 9000
            - containerPort: 9870
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl -f localhost:9870
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl -f localhost:9870
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl -f localhost:9870
            failureThreshold: 12
            periodSeconds: 10
          volumeMounts:
            - mountPath: /etc/hadoop/core-site.xml
              subPath: core-site.xml
              name: namenode-confs
            - name: dfs
              mountPath: /hadoop/dfs/name
      {{- with .Values.modules.hdfs.namenode.nodeSelector }}
      nodeSelector: 
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.modules.hdfs.namenode.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.modules.hdfs.namenode.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 6 }}
      {{- end }}
      serviceAccountName: {{ template "serviceAccountName" . }}
      restartPolicy: Always
      volumes:
        - name: namenode-confs
          configMap:
            name: namenode-config
        {{- if not .Values.persistence.enabled }}
        - name: dfs
          emptyDir: {}
        {{- else if and .Values.persistence.enabled (.Values.modules.hdfs.namenode.existingClaim) }}
        - name: dfs
          persistentVolumeClaim:
            claimName: {{ .Values.modules.hdfs.namenode.existingClaim | default  "namenode-data" }}
        {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: dfs
        labels:
          fateMoudle: namenode
{{ include "fate.labels" . | indent 10 }}
      spec:
        accessModes: [{{ .Values.modules.hdfs.namenode.accessMode | quote }}]
        storageClassName: {{ .Values.modules.hdfs.namenode.storageClass }}
        resources:
          requests:
            storage: {{ .Values.modules.hdfs.namenode.size }}
      {{- end }}
{{- end }}