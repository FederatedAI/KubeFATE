# Copyright 2019-2022 VMware, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{ if .Values.modules.hdfs.include }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: datanode
  labels:
    fateMoudle: datanode
{{ include "fate.labels" . | indent 4 }}
spec:
  serviceName: datanode
  replicas: 3
  selector:
    matchLabels:
      fateMoudle: datanode
{{ include "fate.matchLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        fateMoudle: datanode
{{ include "fate.labels" . | indent 8 }}
    spec:
      containers:
        - name: datanode
          image: {{ .Values.image.registry }}/hadoop-datanode:2.0.0-hadoop2.7.4-java8
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SERVICE_PRECONDITION
              value: "namenode:9000"
          envFrom:
            - configMapRef:
                name: datanode-env
          ports:
            - containerPort: 9000
            - containerPort: 9870
            - containerPort: 50075
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - curl -f localhost:50075
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - curl -f localhost:50075
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - curl -f localhost:50075
            failureThreshold: 12
            periodSeconds: 10
          volumeMounts:
            - name: dfs
              mountPath: /hadoop/dfs/data
      {{- with .Values.modules.hdfs.datanode.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.modules.hdfs.datanode.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.modules.hdfs.datanode.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 6 }}
      {{- end }}
      serviceAccountName: {{ template "serviceAccountName" . }}
      restartPolicy: Always
      volumes:
        - name: dfs
        {{ if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.modules.hdfs.datanode.existingClaim | default  "datanode-data" }}
        {{ else }}
          emptyDir: {}
        {{ end }}
{{ end }}