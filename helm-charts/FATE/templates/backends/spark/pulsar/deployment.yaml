# Copyright 2019-2022 VMware, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{ if .Values.modules.pulsar.include }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pulsar
  labels:
    fateMoudle: pulsar
{{ include "fate.labels" . | indent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      fateMoudle: pulsar
{{ include "fate.matchLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        fateMoudle: pulsar
{{ include "fate.labels" . | indent 8 }}
    spec:
      containers:
        - name: pulsar
          image: {{ .Values.image.registry }}/pulsar:2.7.0
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - "bin/pulsar standalone -nss"
          env:
          ports:
            - containerPort: 6650
            - containerPort: 6651
            - containerPort: 8080
            - containerPort: 8081
          livenessProbe:
            tcpSocket:
              {{- if .Values.modules.pulsar.exchange }}
              port: 8081
              {{- else }}
              port: 8080
              {{- end }}
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              {{- if .Values.modules.pulsar.exchange }}
              port: 8081
              {{- else }}
              port: 8080
              {{- end }}
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              {{- if .Values.modules.pulsar.exchange }}
              port: 8081
              {{- else }}
              port: 8080
              {{- end }}
            failureThreshold: 12
            periodSeconds: 10
          volumeMounts:
            - mountPath: /pulsar/conf/standalone.conf
              name: pulsar-confs
              subPath: standalone.conf
            - mountPath: /pulsar/data
              name: pulsar-data
            {{- with .Values.modules.pulsar.exchange }}
            - mountPath: /opt/pulsar/certs/
              name: pulsar-cert
            {{- end }}
      {{- with .Values.modules.pulsar.nodeSelector }}
      nodeSelector: 
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.modules.pulsar.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.modules.pulsar.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 6 }}
      {{- end }}
      serviceAccountName: {{ template "serviceAccountName" . }}
      restartPolicy: Always
      volumes:
        - name: pulsar-confs
          configMap:
            name: pulsar-config
        {{- with .Values.modules.pulsar.exchange }}
        - name: pulsar-cert
          secret:
            secretName: pulsar-cert
        {{- end }}
        - name: pulsar-data
        {{ if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.modules.pulsar.existingClaim | default  "pulsar-data" }}
        {{ else }}
          emptyDir: {}
        {{ end }}
{{ end }}