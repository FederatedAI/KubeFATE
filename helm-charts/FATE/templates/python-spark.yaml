# Copyright 2019-2020 VMware, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{ if .Values.modules.python.include }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: python-config
  labels:
    fateMoudle: python
{{ include "fate.labels" . | indent 4 }}
data:
  rabbitmq_route_table.yaml: |
    {{ .Values.partyId }}:
      host: rabbitmq
      port: 5672
{{- range $key, $val := .Values.modules.rabbitmq.route_table }}
    {{ $key }}: 
{{ toYaml . | indent 6 }}
{{- end }}
  spark-defaults.conf: |
    spark.master                      {{  .Values.modules.python.spark.master | default "local[4]"}}
    #spark.eventLog.enabled           true
    #spark.eventLog.dir               hdfs://namenode:9000/spark/logs
    spark.driver.host                 fateflow
  service_conf.yaml: |
    work_mode: 1
    use_registry: false
    fateflow:
      # you must set real ip address or 127.0.0.1, 0.0.0.0 is not supported
      host: fateflow
      http_port: 9380
      grpc_port: 9360
      # support rollsite or nginx as a coordinate proxy, rollsite recommended in the fate on eggroll, nginx is recommended in the fate on spark
      # format(proxy: rollsite) means rollsite use the rollsite configuration of fate_one_eggroll and nginx use the nginx configuration of fate_one_spark
      # you can customize the config by format(proxy:\n name: rollsite \n host: xx \n port: xx)
      {{- if eq .Values.modules.python.backend  "spark" }}
      proxy: nginx
      {{- else }}
      proxy: rollsite
      {{- end }}
    fateboard:
      host: fateboard
      port: 8080
    database:
      name: '{{ .Values.modules.mysql.database }}'
      user: '{{ .Values.modules.mysql.user }}'
      passwd: '{{ .Values.modules.mysql.password }}'
      host: '{{ .Values.modules.mysql.ip }}'
      port: {{ .Values.modules.mysql.port }}
      max_connections: 100
      stale_timeout: 30
    fate_on_eggroll:
      clustermanager:
        cores_per_node: 20
        nodes: 1
      rollsite:
        host: {{ .Values.modules.rollsite.ip }}
        port: 9370
    fate_on_spark:
      spark:
        # default use SPARK_HOME environment variable
        home: 
        cores_per_node: {{ .Values.modules.python.spark.cores_per_node }}
        nodes: {{ .Values.modules.python.spark.nodes }}
      hdfs:
        name_node: {{ .Values.modules.python.hdfs.name_node }}
        # default /
        path_prefix: {{ .Values.modules.python.hdfs.path_prefix }}
      rabbitmq:
        host: {{ .Values.modules.python.rabbitmq.host }}
        mng_port: {{ .Values.modules.python.rabbitmq.mng_port }}
        port: {{ .Values.modules.python.rabbitmq.port }}
        user: {{ .Values.modules.python.rabbitmq.user }}
        password: {{ .Values.modules.python.rabbitmq.password }}
        # default conf/rabbitmq_route_table.yaml
        route_table: {{ .Values.modules.python.rabbitmq.route_table }}
      nginx:
        host: {{ .Values.modules.python.nginx.host }}
        port: {{ .Values.modules.python.nginx.port }}
    model_store_address:
      storage: mysql
      name: model
      host: '{{ .Values.modules.mysql.ip }}'
      port: {{ .Values.modules.mysql.port }}
      user: '{{ .Values.modules.mysql.user }}'
      passwd: '{{ .Values.modules.mysql.password }}'
      max_connections: 10
      stale_timeout: 10
    servings:
      hosts:
      {{- if .Values.modules.serving }}
        - {{ .Values.modules.serving.ip }}:{{ .Values.modules.serving.port }}
      {{- end }}
  transfer_conf.yaml: |
    paths: # dir or path
      - "python/federatedml/transfer_variable/auth_conf"
  pipeline_conf.yaml: |
    ip: fateflow
    port: 9380
    log_directory: /fml_manager/Examples/Pipeline/logs
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fateboard-config
  labels:
    fateMoudle: fateboard
{{ include "fate.labels" . | indent 4 }}
data:
  application.properties: |
    server.port=8080
    fateflow.url=http://fateflow:9380
    spring.datasource.driver-Class-Name=com.mysql.cj.jdbc.Driver
    spring.http.encoding.charset=UTF-8
    spring.http.encoding.enabled=true
    server.tomcat.uri-encoding=UTF-8
    fateboard.datasource.jdbc-url=jdbc:mysql://{{ .Values.modules.mysql.ip }}:{{ .Values.modules.mysql.port }}/{{ .Values.modules.mysql.database }}?characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
    fateboard.datasource.username={{ .Values.modules.mysql.user }}
    fateboard.datasource.password={{ .Values.modules.mysql.password }}
    server.tomcat.max-threads=1000
    server.tomcat.max-connections=20000
    spring.servlet.multipart.max-file-size=10MB
    spring.servlet.multipart.max-request-size=100MB
    spring.datasource.druid.filter.config.enabled=false
    spring.datasource.druid.web-stat-filter.enabled=false
    spring.datasource.druid.stat-view-servlet.enabled=false
    server.compression.enabled=true
    server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python
  labels:
    fateMoudle: python
{{ include "fate.labels" . | indent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      fateMoudle: python
{{ include "fate.matchLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        fateMoudle: python
{{ include "fate.labels" . | indent 8 }}
    spec:
      initContainers:
      {{- if .Values.image.isThridParty }}
      - image: {{ .Values.image.registry }}/mysql:8
      {{- else }}
      - image: mysql:8
      {{- end }}
        name: mysql
        env:
        - name: MYSQL_DATABASE
          value: {{ .Values.modules.mysql.database }}
        - name: MYSQL_USER
          value: {{ .Values.modules.mysql.user }}
        - name: MYSQL_PASSWORD
          value: {{ .Values.modules.mysql.password }}
        - name: MYSQL_HOST
          value: {{ .Values.modules.mysql.ip }}
        - name: MYSQL_PORT
          value: {{ .Values.modules.mysql.port  | quote }}
        command:
        - /bin/bash
        - -c
        - |
          set -x
          function checkMySQL(){
            checkMySQLCount=0
            while true ; do
              checkMySQLCount=$[checkMySQLCount+1]
              echo "Waiting for mysql started. check count: $checkMySQLCount"
              sleep 2

              state=`mysqladmin ping -h ${MYSQL_HOST} --port=${MYSQL_PORT} -u${MYSQL_USER} -p${MYSQL_PASSWORD}| awk '{print $3}'`
              if [ "$state" == "alive" ]; then
                echo "mysql server has been already started."
              break
              fi
           done
          }
          echo "Waiting for mysql started..."
          checkMySQL
      containers:
        - name: python
          {{- if eq .Values.modules.python.backend  "spark" }}
          image: {{ .Values.image.registry }}/python-spark:{{ .Values.image.tag }}
          {{- else }}
          image: {{ .Values.image.registry }}/python:{{ .Values.image.tag }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PYSPARK_PYTHON
            value: /data/projects/python/venv/bin/python
          - name: PYSPARK_DRIVER_PYTHON
            value: /data/projects/python/venv/bin/python
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          ports:
            - containerPort: 9360
            - containerPort: 9380
          command:
            - /bin/bash
            - -c
            - |
                set -x
                mkdir -p /data/projects/fate/conf/
                cp /data/projects/fate/conf1/transfer_conf.yaml /data/projects/fate/conf/transfer_conf.yaml
                cp /data/projects/fate/conf1/service_conf.yaml /data/projects/fate/conf/service_conf.yaml
                cp /data/projects/fate/conf1/pipeline_conf.yaml /data/projects/fate/conf/pipeline_conf.yaml
                # fix fateflow conf must use IP
                sed -i "s/host: fateflow/host: ${POD_IP}/g" /data/projects/fate/conf/service_conf.yaml
                # fix pipeline conf must use IP
                sed -i "s/ip: fateflow/ip: ${POD_IP}/g" /data/projects/fate/conf/pipeline_conf.yaml
                # shared examples 
                cp -r /data/projects/fate/examples /data/projects/fate/examples-shared-for-client
                sleep 5;
                source /data/projects/python/venv/bin/activate 
                python ./fate_flow/fate_flow_server.py
          volumeMounts:
            - mountPath: /data/projects/fate/eggroll/conf/eggroll.properties
              name: eggroll-confs
              subPath: eggroll.properties
            - name: logs
              mountPath: /data/projects/fate/logs
            - mountPath: /data/projects/fate/conf1/
              name: python-confs
            - name: download-dir
              mountPath: /data/projects/fate/python/download_dir
            - mountPath: /data/projects/spark-2.4.1-bin-hadoop2.7/conf/spark-defaults.conf
              name: python-confs
              subPath: spark-defaults.conf
            - mountPath: /data/projects/fate/conf/rabbitmq_route_table.yaml
              name: python-confs
              subPath: rabbitmq_route_table.yaml
            - mountPath: /data/projects/fate/conf/
              name: shared-dir-conf
            - mountPath: /data/projects/fate/examples-shared-for-client
              name: shared-dir-examples
        {{- if .Values.modules.client.include }}
        - image: {{ .Values.image.registry }}/client:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: client
          env:
            - name: partyId
              value: {{ .Values.partyId | quote  }}
            - name: FATE_FLOW_HOST
              value: "fateflow:9380"
            - name: FATE_SERVING_HOST
              value: "{{.Values.modules.serving.ip}}:{{.Values.modules.serving.port}}"
          ports:
            - containerPort: 20000
          volumeMounts:
            - mountPath: /data/projects/fate/conf/
              name: shared-dir-conf
            - mountPath: /data/projects/fate/examples
              name: shared-dir-examples
              subPath: examples
            - name: download-dir
              mountPath: /fml_manager/Examples/download_dir
        {{- end }}
        {{- if .Values.modules.fateboard.include }}
        - image: {{ .Values.image.registry }}/fateboard:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: fateboard
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /data/projects/fate/fateboard/conf/application.properties
              name: fateboard-confs
              subPath: application.properties
            - name: logs
              mountPath: /data/projects/fate/logs
        {{- end }}
      {{- with .Values.modules.python.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      restartPolicy: Always
      volumes:
        - name: eggroll-confs
          configMap:
            name: eggroll-config
        - name: python-confs
          configMap:
            name: python-config
        - name: fateboard-confs
          configMap:
            name: fateboard-config
        - name: logs
          emptyDir: {}
        - name: download-dir
          emptyDir: {}
        - name: shared-dir-conf
          emptyDir: {}
        - name: shared-dir-examples
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: fateflow
  labels:
    fateMoudle: fateflow
{{ include "fate.labels" . | indent 4 }}
spec:
  ports:
    - name: "9360"
      port: 9360
      targetPort: 9360
      protocol: TCP
    - name: "9380"
      port: 9380
      targetPort: 9380
      protocol: TCP
  type: ClusterIP
  clusterIP: None
  selector:
    fateMoudle: python
{{ include "fate.matchLabels" . | indent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: fateflow-client
  labels:
    fateMoudle: fateflow
{{ include "fate.labels" . | indent 4 }}
spec:
  ports:
    - name: "grpc"
      port: 9360
      targetPort: 9360
      {{- if eq .Values.modules.python.type "NodePort" "LoadBalancer" }}
      nodePort: {{ .Values.modules.python.grpcNodePort }}
      {{- end }}
      protocol: TCP
    - name: "http"
      port: 9380
      targetPort: 9380
      {{- if eq .Values.modules.python.type "NodePort" "LoadBalancer" }}
      nodePort: {{ .Values.modules.python.httpNodePort }}
      {{- end }}
      protocol: TCP
  type: {{ .Values.modules.python.type }}
  selector:
    fateMoudle: python
{{ include "fate.matchLabels" . | indent 4 }}
---
{{- if .Values.modules.fateboard.include }}
apiVersion: v1
kind: Service
metadata:
  name: fateboard
  labels:
    fateMoudle: python
{{ include "fate.labels" . | indent 4 }}
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
      protocol: TCP
  type: {{ .Values.modules.fateboard.type }}
  selector:
    fateMoudle: python
{{ include "fate.matchLabels" . | indent 4 }}
---
{{- end }}
{{- if .Values.modules.client.include }}
apiVersion: v1
kind: Service
metadata:
  name: notebook
  labels:
    fateMoudle: python
{{ include "fate.labels" . | indent 4 }}
spec:
  ports:
    - name: "20000"
      port: 20000
      targetPort: 20000
      protocol: TCP
  type: {{ .Values.modules.client.type }}
  selector:
    fateMoudle: python
{{ include "fate.matchLabels" . | indent 4 }}
---
{{- end }}
{{ end }}
