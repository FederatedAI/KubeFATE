work_mode: 1
use_registry: false
use_deserialize_safe_module: false
fateflow:
  # you must set real ip address, 127.0.0.1 and 0.0.0.0 is not supported
  host: 192.167.0.100
  http_port: 9380
  grpc_port: 9360
  # support rollsite/nginx/fateflow as a coordination proxy
  # rollsite support fate on eggroll, use grpc protocol
  # nginx support fate on eggroll and fate on spark, use http or grpc protocol, default is http
  # fateflow support fate on eggroll and fate on spark, use http protocol, but not support exchange network mode

  # format(proxy: rollsite) means rollsite use the rollsite configuration of fate_one_eggroll and nginx use the nginx configuration of fate_one_spark
  # you also can customize the config like this(set fateflow of the opposite party as proxy):
  # proxy:
  #   name: fateflow
  #   host: xx
  #   http_port: xx
  #   grpc_port: xx
  proxy: rollsite 
  # support default/http/grpc
  protocol: default
  # It can also be specified in the job configuration using the federated_status_collect_type parameter
  default_federated_status_collect_type: PULL
fateboard:
  host: fateboard
  port: 8080
database:
  name: <db_name>
  user: <db_user>
  passwd: <db_passwd>
  host: <db_host>
  port: 3306
  max_connections: 100
  stale_timeout: 30
fate_on_eggroll:
  clustermanager:
    cores_per_node: 16
    nodes: 1
  rollsite:
    host: rollsite 
    port: 9370
fate_on_spark:
  spark:
    cores_per_node: 20
    nodes: 2
  hdfs:
    name_node: hdfs://namenode:9000
  rabbitmq:
    host: rabbitmq 
    mng_port: 15672 
    port: 5672
    user: fate
    password: fate
  pulsar:
    host: pulsar
    mng_port: 8080
    port: 6650
    topic_ttl: 3 
  nginx:
    host: nginx 
    http_port: 9300
    grpc_port: 9310
model_store_address:
  storage: mysql
  name: <db_name> 
  host: <db_host> 
  port: 3306
  user: <db_user>
  passwd: <db_passwd>
  max_connections: 10
  stale_timeout: 10
servings:
  hosts:
    - 127.0.0.1:8000
