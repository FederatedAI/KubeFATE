########################################################
# Copyright 2019-2020 program was created VMware, Inc. #
# SPDX-License-Identifier: Apache-2.0                  #
########################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    {{ .Values.partyId }}: redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{ .Values.partyId }}: redis
  template:
    metadata:
      labels:
        {{ .Values.partyId }}: redis
    spec:
      containers:
        {{ if .Values.image.isThridParty}}
        - image: {{ .Values.image.registry }}/redis
        {{ else }}
        - image: redis
        {{- end }}
          name: redis
          ports:
            - containerPort: 6379
              name: redis
          command:
            - "redis-server"
          args:
            - "/usr/local/etc/redis/redis.conf"
            - "--requirepass"
            - "{{ .Values.redis.requirepass | default "fate_dev" }}"
          volumeMounts:
            - mountPath: /usr/local/etc/redis/redis.conf
              name: redis-confs
              subPath: redis.conf
            {{- if and .Values.nfspath ( .Values.nfsserver ) }}
            - name: redis-persistent-storage
              subPath: redis
              mountPath: /var/lib/redis
            {{- end }}
      {{ if .Values.nodeSelector.redis.value}}
      nodeSelector:
        {{ .Values.nodeSelector.redis.nodeLabel }}: {{ .Values.nodeSelector.redis.value }}
      {{ end }}
      restartPolicy: Always
      volumes:
        - name: redis-confs
          configMap:
            name: redis-config
        {{- if and .Values.nfspath ( .Values.nfsserver ) }}
        - name: redis-persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Values.partyId }}-pv-claim
        {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    {{ .Values.partyId }}: redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
      protocol: TCP
  type: ClusterIP
  selector:
    {{ .Values.partyId }}: redis
