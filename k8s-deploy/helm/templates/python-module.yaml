########################################################
# Copyright 2019-2020 program was created VMware, Inc. #
# SPDX-License-Identifier: Apache-2.0                  #
########################################################

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: python
  labels:
    {{ .Values.partyId }}: python
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{ .Values.partyId }}: python
    spec:
      initContainers:
      - image: mysql
        name: mysql
        env:
        - name: MYSQL_DATABASE
          value: {{ .Values.mysql.mysql_database }}
        - name: MYSQL_USER
          value: {{ .Values.mysql.mysql_user }}
        - name: MYSQL_PASSWORD
          value: {{ .Values.mysql.mysql_password }}
        - name: MYSQL_HOST
          value: mysql
        command:
        - /bin/bash
        - -c
        - |
          set -x

          function checkMySQL(){
            checkMySQLCount=0
            while true ; do
              checkMySQLCount=$[checkMySQLCount+1]
              echo "Waiting for mysql started. check count: $checkMySQLCount"
              sleep 2

              state=`mysqladmin ping -h ${MYSQL_HOST} -u${MYSQL_USER} -p${MYSQL_PASSWORD}| awk '{print $3}'`
              if [ "$state" == "alive" ]; then
                echo "mysql server has been already started."
              break
              fi
           done
          }
          echo "Waiting for mysql started..."
          checkMySQL
      containers:
        - image: {{ .Values.image.registry }}/python:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: python
          ports:
            - containerPort: 9360
            - containerPort: 9380
          command:
            - /bin/bash
            - -c
          args:
            - echo "127.0.0.1  python" >> /etc/hosts && source /data/projects/fate/venv/bin/activate && cd python/fate_flow && python fate_flow_server.py
          volumeMounts:
            - mountPath: /data/projects/fate/python/arch/conf/server_conf.json
              name: python-confs
              subPath: server_conf.json
            - mountPath: /data/projects/fate/python/conf/server_conf.json
              subPath: server_conf.json
              name: python-confs
            - mountPath: /data/projects/fate/python/fate_flow/settings.py
              subPath: settings.py
              name: python-confs
            - name: logs
              mountPath: /data/projects/fate/python/logs
        - image: {{ .Values.image.registry }}/fateboard:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: fateboard
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /data/projects/fate/fateboard/conf/application.properties
              name: fateboard-confs
              subPath: application.properties
            - name: logs
              mountPath: /data/projects/fate/python/logs
      {{ if .Values.nodeSelector.python.value}}
      nodeSelector:
        {{ .Values.nodeSelector.python.nodeLabel }}: {{ .Values.nodeSelector.python.value }}
      {{ end }}
      restartPolicy: Always
      volumes:
        - name: python-confs
          configMap:
            name: python-config
        - name: fateboard-confs
          configMap:
            name: fateboard-config
        - name: logs
          emptyDir: {}
status: {}

---
apiVersion: v1
kind: Service
metadata:
  name: python
  labels:
    {{ .Values.partyId }}: python
spec:
  ports:
    - name: "9360"
      port: 9360
      targetPort: 9360
      protocol: TCP
    - name: "9380"
      port: 9380
      targetPort: 9380
      protocol: TCP
    - name: "8080"
      port: 8080
      targetPort: 8080
      protocol: TCP
  type: ClusterIP
  selector:
    {{ .Values.partyId }}: python
status:
  loadBalancer: {}
