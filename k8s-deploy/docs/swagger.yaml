basePath: /v1
definitions:
  api.HelmUUID:
    properties:
      helmUUID:
        type: string
    type: object
  api.JSONEMSGResult:
    properties:
      code:
        example: 401
        type: integer
      msg:
        example: cookie token is empty
        type: string
    type: object
  api.JSONERRORResult:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  api.JSONResult:
    properties:
      msg:
        example: Success
        type: string
    type: object
  api.Login:
    properties:
      password:
        example: admin
        type: string
      username:
        example: admin
        type: string
    type: object
  api.TokenResult:
    properties:
      code:
        example: 200
        type: integer
      expire:
        example: "2021-01-28T14:48:53+08:00"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  api.VersionResult:
    properties:
      msg:
        example: getVersion Success
        type: string
      version:
        example: v1.3.0
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  modules.Cluster:
    properties:
      Info:
        $ref: '#/definitions/modules.MapStringInterface'
        description: Info is the corresponding information of Cluster in k8s
      Spec:
        $ref: '#/definitions/modules.MapStringInterface'
        description: Spec corresponding to values(of Cluster) is decoded into interface
          by yaml
      chart_name:
        type: string
      chart_values:
        $ref: '#/definitions/modules.MapStringInterface'
        description: Values through the values in the Chart file- template.yaml The
          file generates the corresponding helm values file
      chart_version:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      helm_revision:
        description: Cluster revision of helm
        type: integer
      id:
        type: integer
      name:
        type: string
      namespaces:
        type: string
      revision:
        description: Cluster revision
        type: integer
      status:
        description: 'The status of the Cluster, including: "Creating","Deleting","Updating","Running","Unavailable","Deleted"'
        type: integer
      updatedAt:
        type: string
      uuid:
        description: UUID is created by github.com/satori/go A combination of 36 bit
          strings generated by. UUID
        type: string
      values:
        description: Values field storage cluster.yaml File content of
        type: string
    type: object
  modules.ClusterArgs:
    properties:
      chart_name:
        type: string
      chart_version:
        type: string
      cover:
        type: boolean
      data:
        items:
          type: integer
        type: array
      name:
        type: string
      namespace:
        type: string
    type: object
  modules.HelmChart:
    properties:
      app_version:
        type: string
      chart:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      uuid:
        type: string
      values:
        type: string
      values_template:
        type: string
      version:
        type: string
    type: object
  modules.Job:
    properties:
      cluster_id:
        type: string
      createdAt:
        type: string
      creator:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      end_time:
        type: string
      id:
        type: integer
      meta_data:
        $ref: '#/definitions/modules.ClusterArgs'
      method:
        type: string
      start_time:
        type: string
      states:
        items:
          type: string
        type: array
      status:
        type: integer
      sub_jobs:
        $ref: '#/definitions/modules.SubJobs'
      time_limit:
        type: string
      updatedAt:
        type: string
      uuid:
        type: string
    type: object
  modules.MapStringInterface:
    additionalProperties: true
    type: object
  modules.Namespace:
    properties:
      age:
        type: string
      annotations:
        additionalProperties:
          type: string
        type: object
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      status:
        type: string
    type: object
  modules.SubJob:
    properties:
      endTime:
        type: string
      moduleName:
        type: string
      modulesStatus:
        type: string
      startTime:
        type: string
      status:
        type: string
    type: object
  modules.SubJobs:
    additionalProperties:
      $ref: '#/definitions/modules.SubJob'
    type: object
  modules.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      salt:
        type: string
      updatedAt:
        type: string
      userStatus:
        type: integer
      username:
        type: string
      uuid:
        type: string
    type: object
info:
  contact:
    name: API Support
    url: https://github.com/FederatedAI/KubeFATE
  description: This is a KubeFATE.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: KubeFATE service API
  version: v1
paths:
  /chart:
    get:
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/modules.HelmChart'
                  type: array
              type: object
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: List all historical Charts
      tags:
      - Chart
    post:
      parameters:
      - description: Cluster Chart
        in: formData
        name: file
        required: true
        type: file
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/api.HelmUUID'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Upload a Chart
      tags:
      - Chart
  /chart/{chartId}:
    delete:
      parameters:
      - description: chart Id
        in: path
        name: chartId
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/api.JSONEMSGResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONEMSGResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Delete Chart by chartId
      tags:
      - Chart
    get:
      parameters:
      - description: Chart Id
        in: path
        name: chartId
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/modules.HelmChart'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Get Chart by chartId
      tags:
      - Chart
  /cluster:
    post:
      parameters:
      - description: Cluster Args
        in: body
        name: clusterArgs
        required: true
        schema:
          $ref: '#/definitions/modules.ClusterArgs'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/modules.Job'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      - OAuth2Application:
        - write
        - admin
      summary: Create a new Cluster
      tags:
      - Cluster
    put:
      parameters:
      - description: Cluster Args
        in: body
        name: ClusterArgs
        required: true
        schema:
          $ref: '#/definitions/modules.ClusterArgs'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/modules.Job'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      - OAuth2Application:
        - write
        - admin
      summary: Updates a Cluster in the store with form data
      tags:
      - Cluster
  /cluster/:
    get:
      parameters:
      - default: false
        description: get All Cluster
        in: query
        name: all
        required: true
        type: boolean
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/modules.Cluster'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      - OAuth2Application:
        - write
        - admin
      summary: List all available Clusters
      tags:
      - Cluster
  /cluster/{clusterId}:
    delete:
      parameters:
      - description: Cluster Id
        in: path
        name: clusterId
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/modules.Job'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      - OAuth2Application:
        - write
        - admin
      summary: Delete a Cluster
      tags:
      - Cluster
    get:
      parameters:
      - description: Cluster Id
        in: path
        name: clusterId
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/modules.Cluster'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      - OAuth2Application:
        - write
        - admin
      summary: create Cluster
      tags:
      - Cluster
  /job/:
    get:
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/modules.Job'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: List all historical jobs
      tags:
      - Job
  /job/{jobId}:
    delete:
      parameters:
      - description: Job ID
        in: path
        name: jobId
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/api.JSONEMSGResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Delete Job by jobId
      tags:
      - Job
    get:
      parameters:
      - description: Job ID
        in: path
        name: jobId
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/modules.Job'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Get job by jobId
      tags:
      - Job
    put:
      parameters:
      - description: Job ID
        in: path
        name: jobId
        required: true
        type: string
      - default: stop
        description: jobStatus=stop
        in: query
        name: jobStatus
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Update job status to stop, stop job
      tags:
      - Job
  /log/{clusterID}:
    get:
      description: When the container of requestArgs is not set, the logs of all components
        will be obtained
      parameters:
      - description: Cluster ID
        in: path
        name: clusterID
        required: true
        type: integer
      - description: container name
        in: query
        name: container
        required: true
        type: string
      - default: false
        description: previous
        in: query
        name: previous
        required: true
        type: boolean
      - description: since
        in: query
        name: since
        required: true
        type: string
      - description: since-time
        in: query
        name: since-time
        required: true
        type: string
      - default: false
        description: timestamps
        in: query
        name: timestamps
        required: true
        type: boolean
      - description: tail
        in: query
        name: tail
        required: true
        type: string
      - description: limit-bytes
        in: query
        name: limit-bytes
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Get Cluster log by clusterID
      tags:
      - Log
  /log/{clusterID}/ws:
    get:
      parameters:
      - description: Cluster ID
        in: path
        name: clusterID
        required: true
        type: integer
      - description: container name
        in: query
        name: container
        required: true
        type: string
      - description: previous
        in: query
        name: previous
        required: true
        type: boolean
      - description: since
        in: query
        name: since
        required: true
        type: string
      - description: since-time
        in: query
        name: since-time
        required: true
        type: string
      - description: timestamps
        in: query
        name: timestamps
        required: true
        type: boolean
      - description: tail
        in: query
        name: tail
        required: true
        type: string
      - description: limit-bytes
        in: query
        name: limit-bytes
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Get Cluster Log flow (http1.1)
      tags:
      - Log
  /namespace/:
    get:
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/modules.Namespace'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Get Namespace List of Kubernetes
      tags:
      - Namespace
  /user:
    get:
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/modules.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: List all available user
      tags:
      - User
    post:
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/modules.User'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/modules.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Create a user
      tags:
      - User
    put:
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/modules.User'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/modules.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - User
  /user/{userId}:
    delete:
      parameters:
      - description: User
        in: path
        name: userId
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/api.JSONEMSGResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Delete user by userId
      tags:
      - User
    get:
      parameters:
      - description: User
        in: path
        name: userId
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.JSONResult'
            - properties:
                data:
                  $ref: '#/definitions/modules.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "401":
          description: Unauthorized operation
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Get user by userId
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/api.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.TokenResult'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.JSONEMSGResult'
      summary: login
      tags:
      - User
  /user/logout:
    post:
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.JSONEMSGResult'
      security:
      - ApiKeyAuth: []
      summary: logout
      tags:
      - User
  /version:
    get:
      parameters:
      - default: Bearer <Token>
        description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.VersionResult'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.JSONERRORResult'
      security:
      - ApiKeyAuth: []
      summary: Get build version
      tags:
      - Version
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
